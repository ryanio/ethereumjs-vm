name: vm-test
on: [push]
jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 8.x

      - uses: actions/checkout@v1

      - name: Cache node modules
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm install
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'

      - run: npm run testAPI
        env:
          CI: true

      - run: npm run testAPI:browser
        env:
          CI: true

  test-state:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hardfork: ['Byzantium', 'Constantinople', 'Petersburg', 'Istanbul']

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 8.x

      - uses: actions/checkout@v1

      - name: Cache node modules
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm install
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'

      - run: mkdir -p tests/tape

      - name: Run ${{ matrix.hardfork }} state tests
        run: |
          npm run ${{ format('testState{0}', matrix.hardfork) }} | tee -a ${{ format('testState{0}.tap', matrix.hardfork) }};
          cat ${{ format('testState{0}.tap', matrix.hardfork) }} | npx tap-xunit > ${{ format('testState{0}.xml', matrix.hardfork) }}
        env:
          CI: true

      - name: Upload ${{ matrix.hardfork }} state test metadata (if failure)
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: ${{ format('vmTestState{0}', matrix.hardfork) }}
          path: ${{ format('tests/tape/testState{0}.xml', matrix.hardfork) }}

      - name: Upload state test metadata
        uses: actions/upload-artifact@v1
        with:
          name: vmTestStateMetadata
          path: tests/tape

  test-blockchain:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hardfork: ['', 'Petersburg']

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 8.x

      - uses: actions/checkout@v1

      - name: Cache node modules
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm install
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'

      - run: mkdir -p tests/tape

      - name: Run ${{ matrix.hardfork }} blockchain state tests
        run: |
          npm run ${{ format('testBlockchain{0}', matrix.hardfork) }} | tee -a ${{ format('testBlockchain{0}.tap', matrix.hardfork) }};
          cat ${{ format('testBlockchain{0}.tap', matrix.hardfork) }} | npx tap-xunit > ${{ format('tests/tape/testBlockchain{0}.xml', matrix.hardfork) }}
        env:
          CI: true

      - name: Upload ${{ matrix.hardfork }} blockchain state test metadata (if failure)
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: ${{ format('vmTestBlockchainState{0}', matrix.hardfork) }}
          path: ${{ format('tests/tape/testBlockchain{0}.xml', matrix.hardfork) }}

      - name: Upload blockhain state test metadata
        uses: actions/upload-artifact@v1
        with:
          name: vmTestBlockchainStateMetadata
          path: tests/tape
